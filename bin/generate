#!/bin/bash -e

# The Ubuntu series to build for.
# "local" will build binary packages locally.
SERIES_ALL="local oneiric precise quantal raring"

# The package maintainer
MAINTAINER=$(git config user.name)' <'$(git config user.email)'>'

# Full path to the template debian directories
TPLDIR=$(readlink -f $(dirname "$0")/../templates)

# Number of jobs for a parallel build
JOBS=$(($(grep ^processor /proc/cpuinfo | wc -l) + 1))

# Keep intermediate build directories
KEEP=0

###############################################################################

inc_orig=${INC_ORIG:-1}
URL="$1"
SUBPKG="$2"
bindir=$(readlink -f $(dirname "$0"))

VARS=(SOURCE UPSTREAMNAME DATE YEAR MAINTAINER URL TARBALL VERSION RELEASE SRCPKGVER SERIES VRUIVER HOMEPAGE COPYRIGHT)

mkdir -p build
cd build
TARBALL=$($bindir/gen-archive "$URL" | tail -n 1)
echo "$URL" > "$TARBALL".url

basename=$(echo $TARBALL | sed -n 's/\.[^0-9]*$//p')
suffix=${TARBALL#$basename}
[[ $basename =~ ^([^-]*)-([^-]*)-?(.*)$ ]]
UPSTREAMNAME=${BASH_REMATCH[1]}
VERSION=${BASH_REMATCH[2]}
RELEASE=${BASH_REMATCH[3]}
NAME="$UPSTREAMNAME$SUBPKG"
SRCPKGVER=$VERSION
DATE=$(date -R)
YEAR=$(date +%Y)

debiandir="$TPLDIR/$NAME.debian"
[[ ! -e "$debiandir" ]] && { echo "Cannot find any template debian directories for $NAME"; exit 2; }

echo Using template debian directory $(basename "$debiandir")
for SERIES in $SERIES_ALL; do
  builddir="$NAME.$SERIES.build"
  [[ -d "$builddir" ]] && {(( ! $KEEP )) && rm -rf "$builddir" || mv -T --backup=t "$builddir" "$builddir.old"; }
  mkdir -p "$builddir"
  pushd "$builddir"
    tar -x --strip-components=1 -f ../$TARBALL
    [[ $COPYRIGHT ]] || COPYRIGHT="\n$($bindir/gen-copyrights | sed 's/$/\\n/' | tr -d '\n' | sed 's/\\n$//')"
    cp -a "$TPLDIR/debian" ./
    cp -a "$debiandir/"* debian/
    SOURCE=$(sed -n 's/^Source: \(.*\)$/\1/p' debian/control)
    VRUIVER=$(grep -Rho '/Vrui-2\.[0-9]*/' | sort -u | sed 's/.*-//;s@/@@')
    HOMEPAGE=$(sed -n 's/^Homepage: \(.*\)$/\1/p' debian/control)
    [[ -f debian/VARS ]] && { source debian/VARS; rm debian/VARS; }
    e=""; for v in "${VARS[@]}"; do e+="s|$v|${!v}|g;"; done
    sed -i'' "$e" debian/changelog debian/control debian/copyright
    cl=$(dpkg-parsechangelog)
    ORIGTARBALL=$(echo "$cl" | sed -n 's/^Source: \(.*\)$/\1/p')_$(echo "$cl" | sed -n 's/^Version: \(.*\)-.*$/\1/p').orig$suffix
    [[ ! -e ../$ORIGTARBALL ]] && ( cd .. && ln -s $TARBALL $ORIGTARBALL )
    if [[ "$SERIES" == "local" ]]; then
      echo Creating binary packages locally
      debuild -j$JOBS -us -uc
    else
      echo Creating a source package for series $SERIES
      debuild -j$JOBS -S $((($inc_orig)) && echo "-sa" || echo "-sd")
      inc_orig=0
    fi
  popd
done
